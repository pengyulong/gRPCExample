// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: textfeature.proto

#include "textfeature.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace textfeature {
class textRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<textRequest>
      _instance;
} _textRequest_default_instance_;
class keyResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<keyResponse>
      _instance;
} _keyResponse_default_instance_;
class orderkeyResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<orderkeyResponse>
      _instance;
} _orderkeyResponse_default_instance_;
class docsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<docsRequest>
      _instance;
} _docsRequest_default_instance_;
class SummaryKeyWordsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SummaryKeyWords>
      _instance;
} _SummaryKeyWords_default_instance_;
class sentenceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<sentenceRequest>
      _instance;
} _sentenceRequest_default_instance_;
}  // namespace textfeature
namespace protobuf_textfeature_2eproto {
static void InitDefaultstextRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::textfeature::_textRequest_default_instance_;
    new (ptr) ::textfeature::textRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::textfeature::textRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_textRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstextRequest}, {}};

static void InitDefaultskeyResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::textfeature::_keyResponse_default_instance_;
    new (ptr) ::textfeature::keyResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::textfeature::keyResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_keyResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultskeyResponse}, {}};

static void InitDefaultsorderkeyResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::textfeature::_orderkeyResponse_default_instance_;
    new (ptr) ::textfeature::orderkeyResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::textfeature::orderkeyResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_orderkeyResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsorderkeyResponse}, {}};

static void InitDefaultsdocsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::textfeature::_docsRequest_default_instance_;
    new (ptr) ::textfeature::docsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::textfeature::docsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_docsRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsdocsRequest}, {}};

static void InitDefaultsSummaryKeyWords() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::textfeature::_SummaryKeyWords_default_instance_;
    new (ptr) ::textfeature::SummaryKeyWords();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::textfeature::SummaryKeyWords::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SummaryKeyWords =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSummaryKeyWords}, {}};

static void InitDefaultssentenceRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::textfeature::_sentenceRequest_default_instance_;
    new (ptr) ::textfeature::sentenceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::textfeature::sentenceRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_sentenceRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultssentenceRequest}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_textRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_keyResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_orderkeyResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_docsRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SummaryKeyWords.base);
  ::google::protobuf::internal::InitSCC(&scc_info_sentenceRequest.base);
}

::google::protobuf::Metadata file_level_metadata[6];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::textfeature::textRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::textfeature::textRequest, text_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::textfeature::keyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::textfeature::keyResponse, keywords_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::textfeature::orderkeyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::textfeature::orderkeyResponse, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::textfeature::orderkeyResponse, keywords_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::textfeature::docsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::textfeature::docsRequest, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::textfeature::docsRequest, text_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::textfeature::SummaryKeyWords, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::textfeature::SummaryKeyWords, keywords_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::textfeature::sentenceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::textfeature::sentenceRequest, text_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::textfeature::textRequest)},
  { 6, -1, sizeof(::textfeature::keyResponse)},
  { 12, -1, sizeof(::textfeature::orderkeyResponse)},
  { 19, -1, sizeof(::textfeature::docsRequest)},
  { 26, -1, sizeof(::textfeature::SummaryKeyWords)},
  { 32, -1, sizeof(::textfeature::sentenceRequest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::textfeature::_textRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::textfeature::_keyResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::textfeature::_orderkeyResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::textfeature::_docsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::textfeature::_SummaryKeyWords_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::textfeature::_sentenceRequest_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "textfeature.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021textfeature.proto\022\013textfeature\"\033\n\013text"
      "Request\022\014\n\004text\030\001 \001(\t\"\037\n\013keyResponse\022\020\n\010"
      "keywords\030\001 \001(\t\"0\n\020orderkeyResponse\022\n\n\002id"
      "\030\001 \001(\005\022\020\n\010keywords\030\002 \001(\t\"\'\n\013docsRequest\022"
      "\n\n\002id\030\001 \001(\005\022\014\n\004text\030\002 \001(\t\"#\n\017SummaryKeyW"
      "ords\022\020\n\010keywords\030\001 \003(\t\"\037\n\017sentenceReques"
      "t\022\014\n\004text\030\001 \003(\t2\314\002\n\013TextFeature\022A\n\tSimpl"
      "eRPC\022\030.textfeature.textRequest\032\030.textfea"
      "ture.keyResponse\"\000\022R\n\017ServerStreamRPC\022\034."
      "textfeature.sentenceRequest\032\035.textfeatur"
      "e.orderkeyResponse\"\0000\001\022M\n\017ClientStreamRP"
      "C\022\030.textfeature.docsRequest\032\034.textfeatur"
      "e.SummaryKeyWords\"\000(\001\022W\n\026BidirectionalSt"
      "reamRPC\022\030.textfeature.docsRequest\032\035.text"
      "feature.orderkeyResponse\"\000(\0010\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 598);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "textfeature.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_textfeature_2eproto
namespace textfeature {

// ===================================================================

void textRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int textRequest::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

textRequest::textRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_textfeature_2eproto::scc_info_textRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:textfeature.textRequest)
}
textRequest::textRequest(const textRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  // @@protoc_insertion_point(copy_constructor:textfeature.textRequest)
}

void textRequest::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

textRequest::~textRequest() {
  // @@protoc_insertion_point(destructor:textfeature.textRequest)
  SharedDtor();
}

void textRequest::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void textRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* textRequest::descriptor() {
  ::protobuf_textfeature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_textfeature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const textRequest& textRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_textfeature_2eproto::scc_info_textRequest.base);
  return *internal_default_instance();
}


void textRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:textfeature.textRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool textRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:textfeature.textRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string text = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "textfeature.textRequest.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:textfeature.textRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:textfeature.textRequest)
  return false;
#undef DO_
}

void textRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:textfeature.textRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "textfeature.textRequest.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->text(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:textfeature.textRequest)
}

::google::protobuf::uint8* textRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:textfeature.textRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "textfeature.textRequest.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->text(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:textfeature.textRequest)
  return target;
}

size_t textRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:textfeature.textRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string text = 1;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void textRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:textfeature.textRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const textRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const textRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:textfeature.textRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:textfeature.textRequest)
    MergeFrom(*source);
  }
}

void textRequest::MergeFrom(const textRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:textfeature.textRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.text().size() > 0) {

    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
}

void textRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:textfeature.textRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void textRequest::CopyFrom(const textRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:textfeature.textRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool textRequest::IsInitialized() const {
  return true;
}

void textRequest::Swap(textRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void textRequest::InternalSwap(textRequest* other) {
  using std::swap;
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata textRequest::GetMetadata() const {
  protobuf_textfeature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_textfeature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void keyResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int keyResponse::kKeywordsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

keyResponse::keyResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_textfeature_2eproto::scc_info_keyResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:textfeature.keyResponse)
}
keyResponse::keyResponse(const keyResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  keywords_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.keywords().size() > 0) {
    keywords_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.keywords_);
  }
  // @@protoc_insertion_point(copy_constructor:textfeature.keyResponse)
}

void keyResponse::SharedCtor() {
  keywords_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

keyResponse::~keyResponse() {
  // @@protoc_insertion_point(destructor:textfeature.keyResponse)
  SharedDtor();
}

void keyResponse::SharedDtor() {
  keywords_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void keyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* keyResponse::descriptor() {
  ::protobuf_textfeature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_textfeature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const keyResponse& keyResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_textfeature_2eproto::scc_info_keyResponse.base);
  return *internal_default_instance();
}


void keyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:textfeature.keyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keywords_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool keyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:textfeature.keyResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string keywords = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_keywords()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->keywords().data(), static_cast<int>(this->keywords().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "textfeature.keyResponse.keywords"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:textfeature.keyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:textfeature.keyResponse)
  return false;
#undef DO_
}

void keyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:textfeature.keyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string keywords = 1;
  if (this->keywords().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->keywords().data(), static_cast<int>(this->keywords().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "textfeature.keyResponse.keywords");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->keywords(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:textfeature.keyResponse)
}

::google::protobuf::uint8* keyResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:textfeature.keyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string keywords = 1;
  if (this->keywords().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->keywords().data(), static_cast<int>(this->keywords().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "textfeature.keyResponse.keywords");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->keywords(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:textfeature.keyResponse)
  return target;
}

size_t keyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:textfeature.keyResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string keywords = 1;
  if (this->keywords().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->keywords());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void keyResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:textfeature.keyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const keyResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const keyResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:textfeature.keyResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:textfeature.keyResponse)
    MergeFrom(*source);
  }
}

void keyResponse::MergeFrom(const keyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:textfeature.keyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.keywords().size() > 0) {

    keywords_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.keywords_);
  }
}

void keyResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:textfeature.keyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void keyResponse::CopyFrom(const keyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:textfeature.keyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool keyResponse::IsInitialized() const {
  return true;
}

void keyResponse::Swap(keyResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void keyResponse::InternalSwap(keyResponse* other) {
  using std::swap;
  keywords_.Swap(&other->keywords_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata keyResponse::GetMetadata() const {
  protobuf_textfeature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_textfeature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void orderkeyResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int orderkeyResponse::kIdFieldNumber;
const int orderkeyResponse::kKeywordsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

orderkeyResponse::orderkeyResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_textfeature_2eproto::scc_info_orderkeyResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:textfeature.orderkeyResponse)
}
orderkeyResponse::orderkeyResponse(const orderkeyResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  keywords_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.keywords().size() > 0) {
    keywords_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.keywords_);
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:textfeature.orderkeyResponse)
}

void orderkeyResponse::SharedCtor() {
  keywords_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
}

orderkeyResponse::~orderkeyResponse() {
  // @@protoc_insertion_point(destructor:textfeature.orderkeyResponse)
  SharedDtor();
}

void orderkeyResponse::SharedDtor() {
  keywords_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void orderkeyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* orderkeyResponse::descriptor() {
  ::protobuf_textfeature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_textfeature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const orderkeyResponse& orderkeyResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_textfeature_2eproto::scc_info_orderkeyResponse.base);
  return *internal_default_instance();
}


void orderkeyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:textfeature.orderkeyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keywords_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
  _internal_metadata_.Clear();
}

bool orderkeyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:textfeature.orderkeyResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string keywords = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_keywords()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->keywords().data(), static_cast<int>(this->keywords().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "textfeature.orderkeyResponse.keywords"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:textfeature.orderkeyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:textfeature.orderkeyResponse)
  return false;
#undef DO_
}

void orderkeyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:textfeature.orderkeyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // string keywords = 2;
  if (this->keywords().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->keywords().data(), static_cast<int>(this->keywords().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "textfeature.orderkeyResponse.keywords");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->keywords(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:textfeature.orderkeyResponse)
}

::google::protobuf::uint8* orderkeyResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:textfeature.orderkeyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // string keywords = 2;
  if (this->keywords().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->keywords().data(), static_cast<int>(this->keywords().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "textfeature.orderkeyResponse.keywords");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->keywords(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:textfeature.orderkeyResponse)
  return target;
}

size_t orderkeyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:textfeature.orderkeyResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string keywords = 2;
  if (this->keywords().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->keywords());
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void orderkeyResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:textfeature.orderkeyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const orderkeyResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const orderkeyResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:textfeature.orderkeyResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:textfeature.orderkeyResponse)
    MergeFrom(*source);
  }
}

void orderkeyResponse::MergeFrom(const orderkeyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:textfeature.orderkeyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.keywords().size() > 0) {

    keywords_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.keywords_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void orderkeyResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:textfeature.orderkeyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void orderkeyResponse::CopyFrom(const orderkeyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:textfeature.orderkeyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool orderkeyResponse::IsInitialized() const {
  return true;
}

void orderkeyResponse::Swap(orderkeyResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void orderkeyResponse::InternalSwap(orderkeyResponse* other) {
  using std::swap;
  keywords_.Swap(&other->keywords_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata orderkeyResponse::GetMetadata() const {
  protobuf_textfeature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_textfeature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void docsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int docsRequest::kIdFieldNumber;
const int docsRequest::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

docsRequest::docsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_textfeature_2eproto::scc_info_docsRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:textfeature.docsRequest)
}
docsRequest::docsRequest(const docsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:textfeature.docsRequest)
}

void docsRequest::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
}

docsRequest::~docsRequest() {
  // @@protoc_insertion_point(destructor:textfeature.docsRequest)
  SharedDtor();
}

void docsRequest::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void docsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* docsRequest::descriptor() {
  ::protobuf_textfeature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_textfeature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const docsRequest& docsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_textfeature_2eproto::scc_info_docsRequest.base);
  return *internal_default_instance();
}


void docsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:textfeature.docsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
  _internal_metadata_.Clear();
}

bool docsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:textfeature.docsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string text = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "textfeature.docsRequest.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:textfeature.docsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:textfeature.docsRequest)
  return false;
#undef DO_
}

void docsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:textfeature.docsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // string text = 2;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "textfeature.docsRequest.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->text(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:textfeature.docsRequest)
}

::google::protobuf::uint8* docsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:textfeature.docsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // string text = 2;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "textfeature.docsRequest.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->text(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:textfeature.docsRequest)
  return target;
}

size_t docsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:textfeature.docsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string text = 2;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void docsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:textfeature.docsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const docsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const docsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:textfeature.docsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:textfeature.docsRequest)
    MergeFrom(*source);
  }
}

void docsRequest::MergeFrom(const docsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:textfeature.docsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.text().size() > 0) {

    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void docsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:textfeature.docsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void docsRequest::CopyFrom(const docsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:textfeature.docsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool docsRequest::IsInitialized() const {
  return true;
}

void docsRequest::Swap(docsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void docsRequest::InternalSwap(docsRequest* other) {
  using std::swap;
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata docsRequest::GetMetadata() const {
  protobuf_textfeature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_textfeature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SummaryKeyWords::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SummaryKeyWords::kKeywordsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SummaryKeyWords::SummaryKeyWords()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_textfeature_2eproto::scc_info_SummaryKeyWords.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:textfeature.SummaryKeyWords)
}
SummaryKeyWords::SummaryKeyWords(const SummaryKeyWords& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      keywords_(from.keywords_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:textfeature.SummaryKeyWords)
}

void SummaryKeyWords::SharedCtor() {
}

SummaryKeyWords::~SummaryKeyWords() {
  // @@protoc_insertion_point(destructor:textfeature.SummaryKeyWords)
  SharedDtor();
}

void SummaryKeyWords::SharedDtor() {
}

void SummaryKeyWords::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SummaryKeyWords::descriptor() {
  ::protobuf_textfeature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_textfeature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SummaryKeyWords& SummaryKeyWords::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_textfeature_2eproto::scc_info_SummaryKeyWords.base);
  return *internal_default_instance();
}


void SummaryKeyWords::Clear() {
// @@protoc_insertion_point(message_clear_start:textfeature.SummaryKeyWords)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keywords_.Clear();
  _internal_metadata_.Clear();
}

bool SummaryKeyWords::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:textfeature.SummaryKeyWords)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string keywords = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_keywords()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->keywords(this->keywords_size() - 1).data(),
            static_cast<int>(this->keywords(this->keywords_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "textfeature.SummaryKeyWords.keywords"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:textfeature.SummaryKeyWords)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:textfeature.SummaryKeyWords)
  return false;
#undef DO_
}

void SummaryKeyWords::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:textfeature.SummaryKeyWords)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string keywords = 1;
  for (int i = 0, n = this->keywords_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->keywords(i).data(), static_cast<int>(this->keywords(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "textfeature.SummaryKeyWords.keywords");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->keywords(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:textfeature.SummaryKeyWords)
}

::google::protobuf::uint8* SummaryKeyWords::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:textfeature.SummaryKeyWords)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string keywords = 1;
  for (int i = 0, n = this->keywords_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->keywords(i).data(), static_cast<int>(this->keywords(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "textfeature.SummaryKeyWords.keywords");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->keywords(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:textfeature.SummaryKeyWords)
  return target;
}

size_t SummaryKeyWords::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:textfeature.SummaryKeyWords)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string keywords = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->keywords_size());
  for (int i = 0, n = this->keywords_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->keywords(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SummaryKeyWords::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:textfeature.SummaryKeyWords)
  GOOGLE_DCHECK_NE(&from, this);
  const SummaryKeyWords* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SummaryKeyWords>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:textfeature.SummaryKeyWords)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:textfeature.SummaryKeyWords)
    MergeFrom(*source);
  }
}

void SummaryKeyWords::MergeFrom(const SummaryKeyWords& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:textfeature.SummaryKeyWords)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keywords_.MergeFrom(from.keywords_);
}

void SummaryKeyWords::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:textfeature.SummaryKeyWords)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SummaryKeyWords::CopyFrom(const SummaryKeyWords& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:textfeature.SummaryKeyWords)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SummaryKeyWords::IsInitialized() const {
  return true;
}

void SummaryKeyWords::Swap(SummaryKeyWords* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SummaryKeyWords::InternalSwap(SummaryKeyWords* other) {
  using std::swap;
  keywords_.InternalSwap(CastToBase(&other->keywords_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SummaryKeyWords::GetMetadata() const {
  protobuf_textfeature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_textfeature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void sentenceRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int sentenceRequest::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

sentenceRequest::sentenceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_textfeature_2eproto::scc_info_sentenceRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:textfeature.sentenceRequest)
}
sentenceRequest::sentenceRequest(const sentenceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      text_(from.text_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:textfeature.sentenceRequest)
}

void sentenceRequest::SharedCtor() {
}

sentenceRequest::~sentenceRequest() {
  // @@protoc_insertion_point(destructor:textfeature.sentenceRequest)
  SharedDtor();
}

void sentenceRequest::SharedDtor() {
}

void sentenceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* sentenceRequest::descriptor() {
  ::protobuf_textfeature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_textfeature_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const sentenceRequest& sentenceRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_textfeature_2eproto::scc_info_sentenceRequest.base);
  return *internal_default_instance();
}


void sentenceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:textfeature.sentenceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  text_.Clear();
  _internal_metadata_.Clear();
}

bool sentenceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:textfeature.sentenceRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string text = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text(this->text_size() - 1).data(),
            static_cast<int>(this->text(this->text_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "textfeature.sentenceRequest.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:textfeature.sentenceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:textfeature.sentenceRequest)
  return false;
#undef DO_
}

void sentenceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:textfeature.sentenceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string text = 1;
  for (int i = 0, n = this->text_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text(i).data(), static_cast<int>(this->text(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "textfeature.sentenceRequest.text");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->text(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:textfeature.sentenceRequest)
}

::google::protobuf::uint8* sentenceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:textfeature.sentenceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string text = 1;
  for (int i = 0, n = this->text_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text(i).data(), static_cast<int>(this->text(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "textfeature.sentenceRequest.text");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->text(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:textfeature.sentenceRequest)
  return target;
}

size_t sentenceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:textfeature.sentenceRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string text = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->text_size());
  for (int i = 0, n = this->text_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->text(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void sentenceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:textfeature.sentenceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const sentenceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const sentenceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:textfeature.sentenceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:textfeature.sentenceRequest)
    MergeFrom(*source);
  }
}

void sentenceRequest::MergeFrom(const sentenceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:textfeature.sentenceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  text_.MergeFrom(from.text_);
}

void sentenceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:textfeature.sentenceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void sentenceRequest::CopyFrom(const sentenceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:textfeature.sentenceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool sentenceRequest::IsInitialized() const {
  return true;
}

void sentenceRequest::Swap(sentenceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void sentenceRequest::InternalSwap(sentenceRequest* other) {
  using std::swap;
  text_.InternalSwap(CastToBase(&other->text_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata sentenceRequest::GetMetadata() const {
  protobuf_textfeature_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_textfeature_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace textfeature
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::textfeature::textRequest* Arena::CreateMaybeMessage< ::textfeature::textRequest >(Arena* arena) {
  return Arena::CreateInternal< ::textfeature::textRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::textfeature::keyResponse* Arena::CreateMaybeMessage< ::textfeature::keyResponse >(Arena* arena) {
  return Arena::CreateInternal< ::textfeature::keyResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::textfeature::orderkeyResponse* Arena::CreateMaybeMessage< ::textfeature::orderkeyResponse >(Arena* arena) {
  return Arena::CreateInternal< ::textfeature::orderkeyResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::textfeature::docsRequest* Arena::CreateMaybeMessage< ::textfeature::docsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::textfeature::docsRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::textfeature::SummaryKeyWords* Arena::CreateMaybeMessage< ::textfeature::SummaryKeyWords >(Arena* arena) {
  return Arena::CreateInternal< ::textfeature::SummaryKeyWords >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::textfeature::sentenceRequest* Arena::CreateMaybeMessage< ::textfeature::sentenceRequest >(Arena* arena) {
  return Arena::CreateInternal< ::textfeature::sentenceRequest >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
